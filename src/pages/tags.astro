---
import Base from "@layouts/Base.astro";
import { getAllUniqueArticleTags } from "@lib/collections/articles";
import { Icon } from "astro-icon/components";

const uniqueTags = (await getAllUniqueArticleTags()).sort((a, b) => {
  if (a.tag < b.tag) {
    return -1;
  } else if (a.tag > b.tag) {
    return 1;
  }

  return 0;
});
---

<Base title="Tags">
  <main>
    <h1>Tags</h1>
    <p>
      Articles on this site are tagged to aid navigation. This page lists all
      the tags currently in use.
      <div class="search-container">
        <Icon name="search" />
        <input
          id="tag-filter"
          class="search-input"
          placeholder="Filter tags..."
          title="search"
        />
      </div>
      <ul id="tag-list">
        {
          uniqueTags.map(({ slug, pretty }) => (
            <li>
              <a href={`/tags/${slug}/`} data-astro-prefetch>
                {pretty}
              </a>
            </li>
          ))
        }
      </ul>
    </p>
  </main>

  <script define:vars={{ uniqueTags }}>
    const tagFilter = document.querySelector("#tag-filter");

    const handleInput = (ev) => {
      if (!ev.target) {
        return;
      }

      const target = ev.target;

      const regex = new RegExp(`.*${target.value}.*`, "mi");
      const tagList = document.querySelector("#tag-list");

      while (tagList.lastChild) {
        tagList.removeChild(tagList.lastChild);
      }

      uniqueTags.forEach(({ tag, slug }) => {
        if (regex.test(tag) || target.value.length === 0) {
          const listItem = document.createElement("li");
          const tagLink = document.createElement("a");
          tagLink.href = `/tags/${slug}/`;
          tagLink.textContent = tag;
          tagLink.setAttribute("data-astro-prefetch", "");
          listItem.appendChild(tagLink);
          tagList.appendChild(listItem);
        }
      });
    };

    if (tagFilter) {
      tagFilter.addEventListener("input", handleInput);
    }
  </script>

  <style>
    main {
      display: flex;
      flex-direction: column;
      gap: var(--fixedspace);
    }

    ul {
      margin: 0;
    }
  </style>
</Base>
